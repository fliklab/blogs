{"version":3,"sources":["webpack:///./src/utils/typography.js","webpack:///./src/pages/markdown-remarks.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["typography","Typography","kirkhamTheme","rhythm","query","__webpack_exports__","_ref2","data","console","log","Object","core_browser_esm","layout","allMarkdownRemark","totalCount","edges","map","_ref3","node","key","id","css","frontmatter","title","_ref","date","excerpt","m","module","exports","require","default","loader","enqueue","React","createContext","Menu","props","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","className","layoutStyle","menu","content","children","_public_static_d_3892401927_json__WEBPACK_IMPORTED_MODULE_1__","navbar","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","site","siteMetadata","class","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json"],"mappings":"uJAGMA,EAAa,IAAIC,IAAWC,KAGrBC,EAASH,EAAWG,+FC8BpBC,GA9BEC,EAAA,iBAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAEhB,OADAC,QAAQC,IAAIF,GAEVG,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAAA,WACEA,OAAAC,EAAA,EAAAD,CAAA,UAAKH,EAAKM,kBAAkBC,WAA5B,UACCP,EAAKM,kBAAkBE,MAAMC,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChCR,OAAAC,EAAA,EAAAD,CAAA,OAAKS,IAAKD,EAAKE,IACbV,OAAAC,EAAA,EAAAD,CAAA,MACEW,IAAKA,YAAF,iBACgBlB,EAAO,KADvB,MAIFe,EAAKI,YAAYC,MAAO,IACzBb,OAAAC,EAAA,EAAAD,CAAA,QACEW,IAAGG,GADL,KAKKN,EAAKI,YAAYG,OAGxBf,OAAAC,EAAA,EAAAD,CAAA,SAAIQ,EAAKQ,eAQH,mCCpClB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,6HCctBK,QAAOC,QAELC,IAAMC,cAAc,4FCVzCC,EAAO,SAAAC,GAAK,OAAI3B,OAAA4B,EAAA,EAAA5B,CAAA,OAAK6B,UAAWC,IAAYC,MAAOJ,EAAMK,gLAEhDrC,EAAA,WAAAY,GAAkB,IAAf0B,EAAe1B,EAAf0B,SACVpC,EAAIqC,EAAArC,KAcV,OACEG,OAAA4B,EAAA,EAAA5B,CAAA,WACEA,OAAA4B,EAAA,EAAA5B,CAAA,OAAK6B,UAAWC,IAAYK,QAC1BnC,OAAA4B,EAAA,EAAA5B,CAACoC,EAAA,EAAD,CAAMC,GAAI,KACRrC,OAAA4B,EAAA,EAAA5B,CAAA,MACEW,IAAGG,GAIFjB,EAAKyC,KAAKC,aAAa1B,MAAO,MAGnCb,OAAA4B,EAAA,EAAA5B,CAACoC,EAAA,EAAD,CAAMC,GAAI,WACRrC,OAAA4B,EAAA,EAAA5B,CAAC0B,EAAD,CAAMM,QAAQ,WAEhBhC,OAAA4B,EAAA,EAAA5B,CAACoC,EAAA,EAAD,CAAMC,GAAI,eACRrC,OAAA4B,EAAA,EAAA5B,CAAC0B,EAAD,CAAMM,QAAQ,WAEhBhC,OAAA4B,EAAA,EAAA5B,CAACoC,EAAA,EAAD,CAAMC,GAAI,aACRrC,OAAA4B,EAAA,EAAA5B,CAAC0B,EAAD,CAAMM,QAAQ,aAEhBhC,OAAA4B,EAAA,EAAA5B,CAACoC,EAAA,EAAD,CAAMC,GAAI,gBACRrC,OAAA4B,EAAA,EAAA5B,CAAC0B,EAAD,CAAMM,QAAQ,gBAEhBhC,OAAA4B,EAAA,EAAA5B,CAACoC,EAAA,EAAD,CAAMC,GAAI,cACRrC,OAAA4B,EAAA,EAAA5B,CAAC0B,EAAD,CAAMM,QAAQ,SAGlBhC,OAAA4B,EAAA,EAAA5B,CAAA,OACEwC,MAAM,WACN7B,IAAGf,GAOFqC,iKCtCMQ,UAjBU,SAAA3B,GAAiC,IAA9B4B,EAA8B5B,EAA9B4B,SAAUC,EAAoB7B,EAApB6B,cACpC,OAAKA,EAGEnB,IAAMoB,cAAcC,IAApB7C,OAAA8C,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV","file":"component---src-pages-markdown-remarks-js-3c4177c17b2a65eeba9a.js","sourcesContent":["import Typography from \"typography\"\nimport kirkhamTheme from \"typography-theme-kirkham\"\n\nconst typography = new Typography(kirkhamTheme)\n\nexport default typography\nexport const rhythm = typography.rhythm","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport { rhythm } from \"../utils/typography\"\nimport Layout from \"../components/layout\"\n\nexport default ({ data }) => {\n  console.log(data)\n  return (\n    <Layout>\n      <div>\n        <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <div key={node.id}>\n            <h3\n              css={css`\n                margin-bottom: ${rhythm(1 / 4)};\n              `}\n            >\n              {node.frontmatter.title}{\" \"}\n              <span\n                css={css`\n                  color: #bbf;\n                `}\n              >\n                — {node.frontmatter.date}\n              </span>\n            </h3>\n            <p>{node.excerpt}</p>\n          </div>\n        ))}\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import { css } from \"@emotion/core\"\nimport { graphql, Link, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\n//import { rhythm } from \"../utils/typography\"\nimport layoutStyle from \"./layout-css-module.module.css\"\n\nconst Menu = props => <div className={layoutStyle.menu}>{props.content}</div>\n\nexport default ({ children }) => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `\n  )\n\n  //쿼리로부터 title을 받는다.\n  //title, about, contact 상단 메뉴를 만든다. 각각 링크를 건다. css를 적용해준다.\n  return (\n    <div>\n      <div className={layoutStyle.navbar}>\n        <Link to={\"/\"}>\n          <h2\n            css={css`\n              padding: 10px 25px;\n            `}\n          >\n            {data.site.siteMetadata.title}{\" \"}\n          </h2>\n        </Link>\n        <Link to={\"/about/\"}>\n          <Menu content=\"About\" />\n        </Link>\n        <Link to={\"/work-list/\"}>\n          <Menu content=\"Works\" />\n        </Link>\n        <Link to={\"/contact/\"}>\n          <Menu content=\"Contact\" />\n        </Link>\n        <Link to={\"/fileSystem/\"}>\n          <Menu content=\"FileSystem\" />\n        </Link>\n        <Link to={\"/md-index/\"}>\n          <Menu content=\"md\" />\n        </Link>\n      </div>\n      <div\n        class=\"contents\"\n        css={css`\n            margin: 20px;\n            color: rgb(140,140,140);\n            font-family: 'Darker Grotesque', sans-serif;\n            font-size: 16px;\n        `}\n      >\n        {children}\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}