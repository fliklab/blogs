{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js"],"names":["__webpack_exports__","_ref","post","data","markdownRemark","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","id","styles","container","href","className","title","frontmatter","url","fields","slug","date","dangerouslySetInnerHTML","__html","html","credit","parent","name","ext","size","query","m","module","exports","require","default","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","Menu","props","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","layoutStyle","menu","content","_ref3","children","_public_static_d_3892401927_json__WEBPACK_IMPORTED_MODULE_1__","navbar","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","css","site","siteMetadata","class","_ref2"],"mappings":"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","file":"component---src-templates-blog-post-js-5f2387b776a39a6a7a1b.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport { css } from \"@emotion/core\"\nimport styles from \"../styles/blog-post-module.module.css\"\n\nexport default ({ data }) => {\n  const post = data.markdownRemark\n\n  return (\n    <Layout>\n      <div id={styles.container}>\n        <a href=\"javascript:history.back()\">&lt;&lt; go back</a>\n\n        <hr />\n        <p className={styles.title}>{post.frontmatter.title}</p>\n        <p className={styles.url}>\n          https://flik.github.io/f=log{post.fields.slug}\n        </p>\n        <p className={styles.date}>{post.frontmatter.date}</p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n\n        <div className={styles.credit}>\n          <div>\n          {post.frontmatter.title}<br/>\n          {post.frontmatter.date}<br/>\n          {post.parent.name}{post.parent.ext}\n          </div>\n        </div>\n        <hr />\n        <text size=\"12px\"><center>Copyright by Flik(정성훈) </center> </text>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"DD MMMM, YYYY\")\n      }\n      fields {\n        slug\n      }\n      parent {\n        ... on File {\n          name\n          ext\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { css } from \"@emotion/core\"\nimport { graphql, Link, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\n//import { rhythm } from \"../utils/typography\"\nimport layoutStyle from \"./layout-css-module.module.css\"\n\nconst Menu = props => <div className={layoutStyle.menu}>{props.content}</div>\n\nexport default ({ children }) => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `\n  )\n\n  //쿼리로부터 title을 받는다.\n  //title, about, contact 상단 메뉴를 만든다. 각각 링크를 건다. css를 적용해준다.\n  return (\n    <div>\n      <div className={layoutStyle.navbar}>\n        <Link to={\"/\"}>\n          <h2\n            css={css`\n              padding: 10px 25px;\n            `}\n          >\n            {data.site.siteMetadata.title}{\" \"}\n          </h2>\n        </Link>\n        <Link to={\"/about/\"}>\n          <Menu content=\"About\" />\n        </Link>\n        <Link to={\"/work-list/\"}>\n          <Menu content=\"Works\" />\n        </Link>\n        <Link to={\"/contact/\"}>\n          <Menu content=\"Contact\" />\n        </Link>\n        <Link to={\"/fileSystem/\"}>\n          <Menu content=\"FileSystem\" />\n        </Link>\n        <Link to={\"/md-index/\"}>\n          <Menu content=\"markdown\" />\n        </Link>\n      </div>\n      <div\n        class=\"contents\"\n        css={css`\n            margin: 20px;\n            color: rgb(140,140,140);\n            font-family: 'Darker Grotesque', sans-serif;\n            font-size: 16px;\n        `}\n      >\n        {children}\n      </div>\n    </div>\n  )\n}\n"],"sourceRoot":""}