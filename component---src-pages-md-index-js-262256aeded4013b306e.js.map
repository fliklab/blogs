{"version":3,"sources":["webpack:///./src/pages/md-index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/utils/typography.js"],"names":["__webpack_exports__","_ref5","data","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","css","_ref","_ref2","allMarkdownRemark","totalCount","edges","map","_ref6","node","key","id","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","_ref3","rhythm","frontmatter","title","_ref4","date","excerpt","query","m","module","exports","require","default","loader","enqueue","React","createContext","Menu","props","className","layoutStyle","menu","content","children","_public_static_d_3892401927_json__WEBPACK_IMPORTED_MODULE_1__","navbar","site","siteMetadata","class","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","__webpack_require__","d","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","kirkhamTheme"],"mappings":"+fAMeA,EAAA,iBAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAChB,OACEC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAAA,WACEA,OAAAC,EAAA,EAAAD,CAAA,MACEG,IAAGC,GADL,gCAQAJ,OAAAC,EAAA,EAAAD,CAAA,MAAIG,IAAGE,GAEGN,EAAKO,kBAAkBC,WAFjC,UAGCR,EAAKO,kBAAkBE,MAAMC,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChCX,OAAAC,EAAA,EAAAD,CAAA,OAAKY,IAAKD,EAAKE,IACbb,OAAAC,EAAA,EAAAD,CAACc,EAAA,EAAD,CACEC,GAAIJ,EAAKK,OAAOC,KAChBd,IAAGe,GAMHlB,OAAAC,EAAA,EAAAD,CAAA,MACEG,IAAKA,YAAF,iBACgBgB,YAAO,KADvB,gDAKFR,EAAKS,YAAYC,MAAO,IACzBrB,OAAAC,EAAA,EAAAD,CAAA,QACEG,IAAGmB,GADL,KAMKX,EAAKS,YAAYG,OAGxBvB,OAAAC,EAAA,EAAAD,CAAA,SAAIW,EAAKa,gBAShB,IAAMC,EAAK,kCCxDlB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,6HCctBK,QAAOC,QAELC,IAAMC,cAAc,4FCVzCC,EAAO,SAAAC,GAAK,OAAIpC,OAAAC,EAAA,EAAAD,CAAA,OAAKqC,UAAWC,IAAYC,MAAOH,EAAMI,gLAEhD3C,EAAA,WAAAqB,GAAkB,IAAfuB,EAAevB,EAAfuB,SACV1C,EAAI2C,EAAA3C,KAcV,OACEC,OAAAC,EAAA,EAAAD,CAAA,WACEA,OAAAC,EAAA,EAAAD,CAAA,OAAKqC,UAAWC,IAAYK,QAC1B3C,OAAAC,EAAA,EAAAD,CAACc,EAAA,EAAD,CAAMC,GAAI,KACRf,OAAAC,EAAA,EAAAD,CAAA,MACEG,IAAGC,GAIFL,EAAK6C,KAAKC,aAAaxB,MAAO,MAGnCrB,OAAAC,EAAA,EAAAD,CAACc,EAAA,EAAD,CAAMC,GAAI,WACRf,OAAAC,EAAA,EAAAD,CAACmC,EAAD,CAAMK,QAAQ,WAEhBxC,OAAAC,EAAA,EAAAD,CAACc,EAAA,EAAD,CAAMC,GAAI,eACRf,OAAAC,EAAA,EAAAD,CAACmC,EAAD,CAAMK,QAAQ,WAEhBxC,OAAAC,EAAA,EAAAD,CAACc,EAAA,EAAD,CAAMC,GAAI,aACRf,OAAAC,EAAA,EAAAD,CAACmC,EAAD,CAAMK,QAAQ,aAEhBxC,OAAAC,EAAA,EAAAD,CAACc,EAAA,EAAD,CAAMC,GAAI,gBACRf,OAAAC,EAAA,EAAAD,CAACmC,EAAD,CAAMK,QAAQ,gBAEhBxC,OAAAC,EAAA,EAAAD,CAACc,EAAA,EAAD,CAAMC,GAAI,cACRf,OAAAC,EAAA,EAAAD,CAACmC,EAAD,CAAMK,QAAQ,SAGlBxC,OAAAC,EAAA,EAAAD,CAAA,OACE8C,MAAM,WACN3C,IAAGE,GAOFoC,iKCtCMM,UAjBU,SAAA3C,GAAiC,IAA9B4C,EAA8B5C,EAA9B4C,SAAUC,EAAoB7C,EAApB6C,cACpC,OAAKA,EAGEhB,IAAMiB,cAAcC,IAApBnD,OAAAoD,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,wCCPXC,EAAAC,EAAA1D,EAAA,sBAAAsB,IAAA,IAAAqC,EAAAF,EAAA,KAAAG,EAAAH,EAAAI,EAAAF,GAAAG,EAAAL,EAAA,KAAAM,EAAAN,EAAAI,EAAAC,GAGME,EAAa,IAAIC,IAAWC,KAGrB5C,EAAS0C,EAAW1C","file":"component---src-pages-md-index-js-262256aeded4013b306e.js","sourcesContent":["import React from \"react\"\nimport { css } from \"@emotion/core\"\nimport { Link, graphql } from \"gatsby\"\nimport { rhythm } from \"../utils/typography\"\nimport Layout from \"../components/layout\"\n\nexport default ({ data }) => {\n  return (\n    <Layout>\n      <div>\n        <h1\n          css={css`\n            display: inline-block;\n            border-bottom: 1px solid;\n            `}\n        >\n          Amazing Pandas Eating Things\n        </h1>\n        <h4 css={css`\n                font-family: 'Darker Grotesque', sans-serif;\n              `}>{data.allMarkdownRemark.totalCount} Posts</h4>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <div key={node.id}>\n            <Link\n              to={node.fields.slug}\n              css={css`\n                text-decoration: none;\n                color: inherit;\n                font-family: 'Nanum Gothic Coding', monospace;\n                `}\n            >\n              <h3\n                css={css`\n                  margin-bottom: ${rhythm(1 / 4)};\n                  font-family: 'Darker Grotesque', sans-serif;\n                `}\n              >\n                {node.frontmatter.title}{\" \"}\n                <span\n                  css={css`\n                    color: #bbb;\n                    font-family: 'Darker Grotesque', sans-serif;\n                  `}\n                >\n                  — {node.frontmatter.date}\n                </span>\n              </h3>\n              <p>{node.excerpt}</p>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import { css } from \"@emotion/core\"\nimport { graphql, Link, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\n//import { rhythm } from \"../utils/typography\"\nimport layoutStyle from \"./layout-css-module.module.css\"\n\nconst Menu = props => <div className={layoutStyle.menu}>{props.content}</div>\n\nexport default ({ children }) => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `\n  )\n\n  //쿼리로부터 title을 받는다.\n  //title, about, contact 상단 메뉴를 만든다. 각각 링크를 건다. css를 적용해준다.\n  return (\n    <div>\n      <div className={layoutStyle.navbar}>\n        <Link to={\"/\"}>\n          <h2\n            css={css`\n              padding: 10px 25px;\n            `}\n          >\n            {data.site.siteMetadata.title}{\" \"}\n          </h2>\n        </Link>\n        <Link to={\"/about/\"}>\n          <Menu content=\"About\" />\n        </Link>\n        <Link to={\"/work-list/\"}>\n          <Menu content=\"Works\" />\n        </Link>\n        <Link to={\"/contact/\"}>\n          <Menu content=\"Contact\" />\n        </Link>\n        <Link to={\"/fileSystem/\"}>\n          <Menu content=\"FileSystem\" />\n        </Link>\n        <Link to={\"/md-index/\"}>\n          <Menu content=\"md\" />\n        </Link>\n      </div>\n      <div\n        class=\"contents\"\n        css={css`\n            margin: 20px;\n            color: rgb(140,140,140);\n            font-family: 'Darker Grotesque', sans-serif;\n            font-size: 16px;\n        `}\n      >\n        {children}\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import Typography from \"typography\"\nimport kirkhamTheme from \"typography-theme-kirkham\"\n\nconst typography = new Typography(kirkhamTheme)\n\nexport default typography\nexport const rhythm = typography.rhythm"],"sourceRoot":""}